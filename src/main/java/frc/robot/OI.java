// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import frc.robot.subsystems.*;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton lowerBallIntakeButton;
    public JoystickButton getBallButton;
    public JoystickButton shootBallButton;
    public JoystickButton spinToggleButton;
    public JoystickButton raiseLiftButton;
    public JoystickButton liftRobotButton;
    public JoystickButton limelightButton;
    public JoystickButton advancedSpinButton;
    public JoystickButton manualSpinButton;
    public Joystick driveJoystick;
    public Joystick shooterJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        shooterJoystick = new Joystick(1);
        //ayo can we see this??

        driveJoystick = new Joystick(0);

        liftRobotButton = new JoystickButton(driveJoystick, 5);
        liftRobotButton.whileHeld(new liftCmd());
        raiseLiftButton = new JoystickButton(driveJoystick, 6);
        raiseLiftButton.whileHeld(new raiseLift());
        spinToggleButton = new JoystickButton(driveJoystick, 2); 
        spinToggleButton.whenPressed(new spinWheel(2));
        advancedSpinButton = new JoystickButton(driveJoystick, 4);
        advancedSpinButton.whileHeld(new spinWheel(3));
        manualSpinButton = new JoystickButton(driveJoystick, 3);
        manualSpinButton.whenPressed(new spinWheel(1));
        shootBallButton = new JoystickButton(driveJoystick, 7);//7 & 8 are the little back and start buttons
        shootBallButton.whileHeld(new shootBall());
        getBallButton = new JoystickButton(driveJoystick, 1);
        getBallButton.whileHeld(new getBall());
        lowerBallIntakeButton = new JoystickButton(driveJoystick, 10);
        lowerBallIntakeButton.whenPressed(new lowerBallIntake());

        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous: Left", new Autonomous(0));
        SmartDashboard.putData("Autonomous: Right", new Autonomous(1));
        SmartDashboard.putData("Autonomous: Center", new Autonomous(2));
        SmartDashboard.putData("lowerBallIntake", new lowerBallIntake());
        SmartDashboard.putData("getBall", new getBall());
        // SmartDashboard.putData("shootBall", new shootBall());
        /*
         * SmartDashboard.putData("spinWheel: NoColor", new spinWheel(0));
         * SmartDashboard.putData("spinWheel: Red", new spinWheel(1));
         * SmartDashboard.putData("spinWheel: Green", new spinWheel(2));
         * SmartDashboard.putData("spinWheel: Blue", new spinWheel(3));
         * SmartDashboard.putData("spinWheel: Yellow", new spinWheel(4));
         */
        SmartDashboard.putData("raiseLift", new raiseLift());
        SmartDashboard.putData("liftCmd", new liftCmd());
        SmartDashboard.putData("driveCmd", new driveCmd());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getDriveJoystick() {
        return driveJoystick;
    }

    public Joystick getShooterJoystick() {
        return shooterJoystick;
    }

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
